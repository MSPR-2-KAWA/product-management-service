name: CI - Unit Tests & Docker Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  PR_NAME: $(echo ${GITHUB_HEAD_REF#refs/heads/} | tr '/' '-')
  PR_NUMBER: $(echo ${{  github.run_number  }})
jobs:
  test-and-build:
    name: Run Tests and Push Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run unit tests
        run: mvn -B clean test

      - name: Build JAR (skip tests)
        run: mvn clean package -DskipTests

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Get branch name (sanitize for tag)
        id: extract_branch
        run: echo "branch=$(echo '${{ github.ref_name }}' | tr '/' '-')" >> $GITHUB_OUTPUT

      - name: Build Docker image with branch tag
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/productartifactory/product-service:${{env.PR_NAME}} .

      - name: Push image to Artifact Registry
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/productartifactory/product-service:${{env.PR_NAME}}
      - name: Deploy to Cloud Run
        if: github.event_name == 'push'
        run: |
          gcloud run deploy product-service \
            --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/productartifactory/product-service:${{env.PR_NAME}} \
            --region=${{ secrets.GCP_REGION }} \
            --platform=managed \
